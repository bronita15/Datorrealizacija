SIG.M

function y=sig(t)
t1f=(t>=0)&(t<2);
t2f=(t>=2)&(t<=4);

t1=t(t1f); 
t2=t(t2f);

y1=1*t1;
y2=2*cos(2*pi*(1/8)*(t2-2));
y=[y1, y2];



%% 6.laboratorijas darbs
%% videjas vertibas atrasana ar 3a, 3b, 3c
t=0:0.1:4;
N=length(t);
xvid3a=1/(N-1)*sum(sig(t(1:end-1)))
xvid3b=1/(N-1)*sum(sig(t(2:end)))
h=(t(end)-t(1))/(N-1)
xvid3c=1/(N-1)*sum(sig(t(1:end)+h/2))
%% videjas vertibas atrasana integrala atrasanai izmantojot matlab iebuveto funkciju quad
% quad(fun_handle,ta,tb,aprekinu kluda)
xvidquad=1/(t(end)-t(1))*quad(@sig,t(1),t(end),1e-3)
%% efektivas vertibas atrsana uz 3a formulas piemera
t=0:0.1:4;
N=length(t);
sigkv=@(t) (sig(t)).^2;
xef3a=sqrt(1/(N-1)*sum(sigkv(t(1:end-1))))
%% efektivas vartibas atrasana integrejot ar quad
xefquad=sqrt(1/(t(end)-t(1))*quad(sigkv,t(1),t(end),1e-3))
%% rezultatu noformesana tabulas veida
% piemers ar 3a formulu
dt=[0.5 0.1 0.05];
fprintf('___________________________________________\n')
for dtc=dt
    t=0:dtc:4;
    N=length(t);
    xvid3a=1/(N-1)*sum(sig(t(1:end-1)));
    xef3a=sqrt(1/(N-1)*sum(sigkv(t(1:end-1))));
    fprintf('| dt=%0.2f | vv3a=%f | ef3a=%f |\n',dtc,xvid3a,xef3a);
end
fprintf('___________________________________________\n')
%% rezultatu noformesana tabulas veida
% piemers integrali rekinot ar quad
tol=[1e-1 1e-2 1e-3];
fprintf('__________________________________________________\n')
for tolc=tol
    xvidquad=1/(t(end)-t(1))*quad(@sig,t(1),t(end),tolc);
    xefquad=sqrt(1/(t(end)-t(1))*quad(sigkv,t(1),t(end),tolc));
    fprintf('| tol=%0.3f | vvquad=%f |  efquad=%f |\n',tolc,xvidquad,xefquad);
end
fprintf('__________________________________________________\n')


	% nak reize iastas vid un ef vertibas atrsana
%simulink

%% istas videjas vertibas atrasana
syms t_sin
A0=0; A=0.5; T=(0.5-0)/2; f=1/T;
delay=0;
y_sin=A0+A*sin(2*pi*f*(t_sin-delay));
int_sin=int(y_sin,t_sin,0,1.5)

syms t_saw
k = (2-(-0))/(2-3);
delay = 2+(2-0)/2; 
y_saw = k*(t_saw-delay);
int_saw=int(y_saw,t_saw,2,3)

syms t_const
y_const=0.5+0*t_const;
int_const=int(y_const,t_const,3.5,4.5)

syms t_zero
y_zero=0+0*t_zero;
int_zero=int(y_zero,t_zero,1.5,2)

syms t_noise
y_noise=0*t_noise;
int_noise=int(y_noise,t_noise,3,3.5)

int_sum=int_noise+int_zero+int_const+int_saw+int_sin;
t=0:0.01:4.5;
vid_vertiba_patiesa=1/(t(end)-t(1))*int_sum
vid_vertiba_patiesa=double(vid_vertiba_patiesa)

%% isto efektivo vertibu
int_sin=int(y_sin^2,t_sin,0,1.5);
int_saw=int(y_saw^2,t_saw,2,3);
int_const=int(y_const^2,t_const,3.5,4.5);
int_zero=int(y_zero^2,t_zero,1.5,2);
int_noise=int(y_noise^2,t_noise,3,3.5);

int_sum=int_noise+int_zero+int_const+int_saw+int_sin;

ef_vertiba_patiesa=sqrt(1/(t(end)-t(1))*int_sum)
ef_vertiba_patiesa=double(ef_vertiba_patiesa)


%% pieliksim bildes no simulinka
%
% <<../a.jpg>>
%
